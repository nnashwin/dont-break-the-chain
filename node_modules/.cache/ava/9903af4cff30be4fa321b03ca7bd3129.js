'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { return { powerAssertContext: { value: value, events: this.captured }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('test what t is', function (t) {
    t.pass();
});

(0, _ava2.default)('can display', function (t) {
    var _rec = new _powerAssertRecorder();

    var tyler = 'tyler';
    t.truthy(_rec._expr(_rec._capt(bogus, 'arguments/0'), {
        content: 't.truthy(bogus)',
        filepath: 'test.js',
        line: 9
    }));
});
//# sourceMappingURL=node_modules/.cache/ava/9903af4cff30be4fa321b03ca7bd3129.js.map