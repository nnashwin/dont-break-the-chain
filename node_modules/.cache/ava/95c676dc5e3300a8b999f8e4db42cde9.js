'use strict';

var _index = require('/Users/RuLai/Developer/dont-break-the-streak-chrome-extension/node_modules/babel-runtime/regenerator/index.js');

var _index2 = _interopRequireDefault(_index);

var _promise = require('/Users/RuLai/Developer/dont-break-the-streak-chrome-extension/node_modules/babel-runtime/core-js/promise.js');

var _promise2 = _interopRequireDefault(_promise);

var _asyncToGenerator2 = require('/Users/RuLai/Developer/dont-break-the-streak-chrome-extension/node_modules/babel-runtime/helpers/asyncToGenerator.js');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { return { powerAssertContext: { value: value, events: this.captured }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('foo', function (t) {
    t.pass();
});

(0, _ava2.default)('bar', function () {
    var ref = (0, _asyncToGenerator3.default)(_index2.default.mark(function _callee(t) {
        var _rec = new _powerAssertRecorder();

        var bar;
        return _index2.default.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        bar = _promise2.default.resolve('bar');
                        _context.t0 = t;
                        _context.t1 = _rec;
                        _context.t2 = _rec;
                        _context.next = 6;
                        return bar;

                    case 6:
                        _context.t3 = _context.sent;
                        _context.t4 = _context.t2._capt.call(_context.t2, _context.t3, 'arguments/0');
                        _context.t5 = {
                            content: 't.is((await bar), \'bar\')',
                            filepath: 'test.js',
                            line: 10,
                            async: true
                        };
                        _context.t6 = _context.t1._expr.call(_context.t1, _context.t4, _context.t5);

                        _context.t0.is.call(_context.t0, _context.t6, 'bar');

                    case 11:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, undefined);
    }));
    return function (_x) {
        return ref.apply(this, arguments);
    };
}());
//# sourceMappingURL=node_modules/.cache/ava/95c676dc5e3300a8b999f8e4db42cde9.js.map